" Personal vim configuration
" vim:fdm=marker
" vim:foldlevel=0

filetype plugin indent on
set nocompatible	" Use Vim defaults instead of 100% vi compatibility
set backspace=indent,eol,start		" more powerful backspacing

" Wildmenu {{{
set wildmenu                " Autocomplete preview
set wildmode=longest:full   " Complete to longest common completion
" Ignore these patterns when globbing
set wildignore+=*.pyc,*.swp
set wildignore+=**/__pycache/**
" }}}
" Backups and Undo {{{
set backup
set backup
set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set backupskip=/tmp/*,/private/tmp/* " Don't backup private things
set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set writebackup

set undofile " Persist undo across save and reload
set undodir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
" }}}
" Tabs {{{
" sets \t length to 4 spaces
set tabstop=4 
" sets the tab key to input 4 spaces and backspace to remove 4
set softtabstop=4
" handle double indentation
set shiftwidth=4
set expandtab "Tabs become spaces
" }}}
" Display {{{
syntax on "enables syntax highlighting
set nu "enables line numbers
" Color {{{
color slate
set colorcolumn=80,100,120 " Reference line stopping points

" The default bright red was a bit too harsh for me
hi ColorColumn ctermbg=8 guibg=Gray 
hi IncSearch ctermbg=10 ctermfg=5
hi Search ctermfg=254 ctermbg=12
hi DiffDelete ctermfg=8 ctermbg=6
hi SpellLocal ctermfg=13 ctermbg=14
" }}}

set lazyredraw " Reduce redraws mid macro for preformance

" When a paragraph goes off the window, draw as much of it as possible
" Represents cut off lines with '@@@' on the last line of the screen
set display+=truncate
" }}}
" Searching {{{
set nohlsearch " Don't keep search matches highlighted
" Do incremental searching when it's possible to timeout.
if has('reltime')
  set incsearch
endif
" }}}
" Filetype autocmds {{{
" Assembly {{{
augroup ft_asm
    autocmd!
    " 8 space tabs for COCS
    autocmd FileType asm setlocal tabstop=8 softtabstop=8 shiftwidth=8
    " Very aggresively highlight long lines
    autocmd FileType asm setlocal colorcolumn=81
    autocmd FileType asm match Error /\%81v.\+/
augroup END
" }}}
" Makefiles {{{
" in makefiles, don't expand tabs to spaces,
" since actual tab characters are needed
autocmd FileType make setlocal noexpandtab shiftwidth=8 softtabstop=0
" }}}
" Javascript, JSON, YAML {{{
" set 2 space tabs
autocmd FileType javascript,json,yaml setlocal tabstop=2 softtabstop=2 shiftwidth=2
" }}}
" Spellcheck for text sort of files {{{
autocmd FileType latex,tex,markdown,md,text,gitcommit setlocal spell
" }}}
" }}}
" Folding {{{
augroup ft_folding
    autocmd!
    autocmd FileType python setlocal foldmethod=indent
    autocmd FileType c setlocal foldmethod=syntax

    " Prevent too deep folding
    autocmd FileType c,python set foldnestmax=2 foldlevel=2

    " Show folds on the left bar
    set foldcolumn=1

    " autocmd BufWrite * mkview
    " autocmd BufRead * silent loadview

    set foldopen+=jump,insert
augroup END
" }}}
" Navigation {{{
" move vertically by visual line
nnoremap j gj
nnoremap k gk
vnoremap j gj
vnoremap k gk

"remap B and E to move to beginning/end of line, and unbind the original keys
nnoremap B ^
nnoremap E $
vnoremap B ^
vnoremap E $

nnoremap $ <nop>
nnoremap ^ <nop>
vnoremap $ <nop>
vnoremap ^ <nop>

" Pulled from /usr/share/vim/vim81/defaults.vim on arch
"
" Only do this part when Vim was compiled with the +eval feature.
if 1

  " Put these in an autocmd group, so that you can revert them with:
  " ":augroup vimStartup | au! | augroup END"
  augroup vimStartup
    au!

    " When editing a file, always jump to the last known cursor position.
    " Don't do it when the position is invalid, when inside an event handler
    " (happens when dropping a file on gvim) and for a commit message (it's
    " likely a different one than last time).
    autocmd BufReadPost *
      \ if line("'\"") >= 1 && line("'\"") <= line("$") && &ft !~# 'commit'
      \ |   exe "normal! g`\""
      \ | endif

  augroup END

endif
" }}}
" Plugin Configuration {{{
" Lightline {{{
set laststatus=2 
set noshowmode      " We don't need to show --INSERT--, since lightline shows it
set ttimeoutlen=50  " Faster updating
" }}}

" AutoPairs {{{
let g:AutoPairsFlyMode = 1 " Enable fly mode
" }}}

" Rainbow parentheses {{{
let g:rainbow_active = 1
" }}}

" HowMuch {{{
"The floating point size of the result:
let g:HowMuch_scale = 9 
"the engine order for auto-calculation
let g:HowMuch_auto_engines = ['py', 'vim', 'bc']
" }}}
" }}}
